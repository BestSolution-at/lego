/*
* generated by Xtext
*/
grammar InternalLego;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package at.bestsolution.lego.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.bestsolution.lego.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.bestsolution.lego.services.LegoGrammarAccess;

}

@parser::members {
 
 	private LegoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LegoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItemRepository
entryRuleItemRepository 
:
{ before(grammarAccess.getItemRepositoryRule()); }
	 ruleItemRepository
{ after(grammarAccess.getItemRepositoryRule()); } 
	 EOF 
;

// Rule ItemRepository
ruleItemRepository
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemRepositoryAccess().getGroup()); }
(rule__ItemRepository__Group__0)
{ after(grammarAccess.getItemRepositoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleItem
entryRuleItem 
:
{ before(grammarAccess.getItemRule()); }
	 ruleItem
{ after(grammarAccess.getItemRule()); } 
	 EOF 
;

// Rule Item
ruleItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemAccess().getAlternatives()); }
(rule__Item__Alternatives)
{ after(grammarAccess.getItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColor
entryRuleColor 
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorAccess().getGroup()); }
(rule__Color__Group__0)
{ after(grammarAccess.getColorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnit
entryRuleXUnit 
:
{ before(grammarAccess.getXUnitRule()); }
	 ruleXUnit
{ after(grammarAccess.getXUnitRule()); } 
	 EOF 
;

// Rule XUnit
ruleXUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnitAccess().getUnitsAssignment()); }
(rule__XUnit__UnitsAssignment)
{ after(grammarAccess.getXUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYUnit
entryRuleYUnit 
:
{ before(grammarAccess.getYUnitRule()); }
	 ruleYUnit
{ after(grammarAccess.getYUnitRule()); } 
	 EOF 
;

// Rule YUnit
ruleYUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYUnitAccess().getUnitsAssignment()); }
(rule__YUnit__UnitsAssignment)
{ after(grammarAccess.getYUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleZUnit
entryRuleZUnit 
:
{ before(grammarAccess.getZUnitRule()); }
	 ruleZUnit
{ after(grammarAccess.getZUnitRule()); } 
	 EOF 
;

// Rule ZUnit
ruleZUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getZUnitAccess().getUnitsAssignment()); }
(rule__ZUnit__UnitsAssignment)
{ after(grammarAccess.getZUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrick
entryRuleBrick 
:
{ before(grammarAccess.getBrickRule()); }
	 ruleBrick
{ after(grammarAccess.getBrickRule()); } 
	 EOF 
;

// Rule Brick
ruleBrick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBrickAccess().getGroup()); }
(rule__Brick__Group__0)
{ after(grammarAccess.getBrickAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRoundBrick
entryRuleRoundBrick 
:
{ before(grammarAccess.getRoundBrickRule()); }
	 ruleRoundBrick
{ after(grammarAccess.getRoundBrickRule()); } 
	 EOF 
;

// Rule RoundBrick
ruleRoundBrick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoundBrickAccess().getGroup()); }
(rule__RoundBrick__Group__0)
{ after(grammarAccess.getRoundBrickAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoorBrick
entryRuleDoorBrick 
:
{ before(grammarAccess.getDoorBrickRule()); }
	 ruleDoorBrick
{ after(grammarAccess.getDoorBrickRule()); } 
	 EOF 
;

// Rule DoorBrick
ruleDoorBrick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoorBrickAccess().getGroup()); }
(rule__DoorBrick__Group__0)
{ after(grammarAccess.getDoorBrickAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoor
entryRuleDoor 
:
{ before(grammarAccess.getDoorRule()); }
	 ruleDoor
{ after(grammarAccess.getDoorRule()); } 
	 EOF 
;

// Rule Door
ruleDoor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoorAccess().getGroup()); }
(rule__Door__Group__0)
{ after(grammarAccess.getDoorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssembly
entryRuleAssembly 
:
{ before(grammarAccess.getAssemblyRule()); }
	 ruleAssembly
{ after(grammarAccess.getAssemblyRule()); } 
	 EOF 
;

// Rule Assembly
ruleAssembly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssemblyAccess().getGroup()); }
(rule__Assembly__Group__0)
{ after(grammarAccess.getAssemblyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssemblyItem
entryRuleAssemblyItem 
:
{ before(grammarAccess.getAssemblyItemRule()); }
	 ruleAssemblyItem
{ after(grammarAccess.getAssemblyItemRule()); } 
	 EOF 
;

// Rule AssemblyItem
ruleAssemblyItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssemblyItemAccess().getGroup()); }
(rule__AssemblyItem__Group__0)
{ after(grammarAccess.getAssemblyItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRepoAssignment_0()); }
(rule__Model__RepoAssignment_0)
{ after(grammarAccess.getModelAccess().getRepoAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAssemblyAssignment_1()); }
(rule__Model__AssemblyAssignment_1)
{ after(grammarAccess.getModelAccess().getAssemblyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Item__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getBrickParserRuleCall_0()); }
	ruleBrick
{ after(grammarAccess.getItemAccess().getBrickParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getItemAccess().getRoundBrickParserRuleCall_1()); }
	ruleRoundBrick
{ after(grammarAccess.getItemAccess().getRoundBrickParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getItemAccess().getDoorBrickParserRuleCall_2()); }
	ruleDoorBrick
{ after(grammarAccess.getItemAccess().getDoorBrickParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getItemAccess().getDoorParserRuleCall_3()); }
	ruleDoor
{ after(grammarAccess.getItemAccess().getDoorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__RoundAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getRoundLeftKeyword_1_0_0()); }

	'left' 

{ after(grammarAccess.getRoundBrickAccess().getRoundLeftKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRoundBrickAccess().getRoundRightKeyword_1_0_1()); }

	'right' 

{ after(grammarAccess.getRoundBrickAccess().getRoundRightKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ItemRepository__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__0__Impl
	rule__ItemRepository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getNameAssignment_0()); }
(rule__ItemRepository__NameAssignment_0)
{ after(grammarAccess.getItemRepositoryAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__1__Impl
	rule__ItemRepository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getItemRepositoryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__2__Impl
	rule__ItemRepository__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
(rule__ItemRepository__ElementListAssignment_2)
{ after(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
)
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
(rule__ItemRepository__ElementListAssignment_2)*
{ after(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getItemRepositoryAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Color__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRgbKeyword_0()); }

	'rgb' 

{ after(grammarAccess.getColorAccess().getRgbKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRAssignment_1()); }
(rule__Color__RAssignment_1)
{ after(grammarAccess.getColorAccess().getRAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGAssignment_2()); }
(rule__Color__GAssignment_2)
{ after(grammarAccess.getColorAccess().getGAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBAssignment_3()); }
(rule__Color__BAssignment_3)
{ after(grammarAccess.getColorAccess().getBAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Brick__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__0__Impl
	rule__Brick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getBrickKeyword_0()); }

	'brick' 

{ after(grammarAccess.getBrickAccess().getBrickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__1__Impl
	rule__Brick__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getNameAssignment_1()); }
(rule__Brick__NameAssignment_1)
{ after(grammarAccess.getBrickAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__2__Impl
	rule__Brick__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getUnitsKeyword_2()); }

	'units' 

{ after(grammarAccess.getBrickAccess().getUnitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__3__Impl
	rule__Brick__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getXUnitsAssignment_3()); }
(rule__Brick__XUnitsAssignment_3)
{ after(grammarAccess.getBrickAccess().getXUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__4__Impl
	rule__Brick__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getYUnitsAssignment_4()); }
(rule__Brick__YUnitsAssignment_4)
{ after(grammarAccess.getBrickAccess().getYUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__5__Impl
	rule__Brick__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getZUnitsAssignment_5()); }
(rule__Brick__ZUnitsAssignment_5)
{ after(grammarAccess.getBrickAccess().getZUnitsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getFillAssignment_6()); }
(rule__Brick__FillAssignment_6)
{ after(grammarAccess.getBrickAccess().getFillAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RoundBrick__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__0__Impl
	rule__RoundBrick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getRbrickKeyword_0()); }

	'rbrick' 

{ after(grammarAccess.getRoundBrickAccess().getRbrickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__1__Impl
	rule__RoundBrick__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getRoundAssignment_1()); }
(rule__RoundBrick__RoundAssignment_1)
{ after(grammarAccess.getRoundBrickAccess().getRoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__2__Impl
	rule__RoundBrick__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getNameAssignment_2()); }
(rule__RoundBrick__NameAssignment_2)
{ after(grammarAccess.getRoundBrickAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__3__Impl
	rule__RoundBrick__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getUnitsKeyword_3()); }

	'units' 

{ after(grammarAccess.getRoundBrickAccess().getUnitsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__4__Impl
	rule__RoundBrick__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getXUnitsAssignment_4()); }
(rule__RoundBrick__XUnitsAssignment_4)
{ after(grammarAccess.getRoundBrickAccess().getXUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__5__Impl
	rule__RoundBrick__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getYUnitsAssignment_5()); }
(rule__RoundBrick__YUnitsAssignment_5)
{ after(grammarAccess.getRoundBrickAccess().getYUnitsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__6__Impl
	rule__RoundBrick__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getZUnitsAssignment_6()); }
(rule__RoundBrick__ZUnitsAssignment_6)
{ after(grammarAccess.getRoundBrickAccess().getZUnitsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoundBrick__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoundBrick__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getFillAssignment_7()); }
(rule__RoundBrick__FillAssignment_7)
{ after(grammarAccess.getRoundBrickAccess().getFillAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DoorBrick__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__0__Impl
	rule__DoorBrick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getDbrickKeyword_0()); }

	'dbrick' 

{ after(grammarAccess.getDoorBrickAccess().getDbrickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__1__Impl
	rule__DoorBrick__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getNameAssignment_1()); }
(rule__DoorBrick__NameAssignment_1)
{ after(grammarAccess.getDoorBrickAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__2__Impl
	rule__DoorBrick__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getUnitsKeyword_2()); }

	'units' 

{ after(grammarAccess.getDoorBrickAccess().getUnitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__3__Impl
	rule__DoorBrick__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getXUnitsAssignment_3()); }
(rule__DoorBrick__XUnitsAssignment_3)
{ after(grammarAccess.getDoorBrickAccess().getXUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__4__Impl
	rule__DoorBrick__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getYUnitsAssignment_4()); }
(rule__DoorBrick__YUnitsAssignment_4)
{ after(grammarAccess.getDoorBrickAccess().getYUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__5__Impl
	rule__DoorBrick__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getZUnitsAssignment_5()); }
(rule__DoorBrick__ZUnitsAssignment_5)
{ after(grammarAccess.getDoorBrickAccess().getZUnitsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoorBrick__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoorBrick__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getFillAssignment_6()); }
(rule__DoorBrick__FillAssignment_6)
{ after(grammarAccess.getDoorBrickAccess().getFillAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Door__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__0__Impl
	rule__Door__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getDoorKeyword_0()); }

	'door' 

{ after(grammarAccess.getDoorAccess().getDoorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__1__Impl
	rule__Door__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getNameAssignment_1()); }
(rule__Door__NameAssignment_1)
{ after(grammarAccess.getDoorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__2__Impl
	rule__Door__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getUnitsKeyword_2()); }

	'units' 

{ after(grammarAccess.getDoorAccess().getUnitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__3__Impl
	rule__Door__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getXUnitsAssignment_3()); }
(rule__Door__XUnitsAssignment_3)
{ after(grammarAccess.getDoorAccess().getXUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__4__Impl
	rule__Door__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getYUnitsAssignment_4()); }
(rule__Door__YUnitsAssignment_4)
{ after(grammarAccess.getDoorAccess().getYUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Door__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getFillAssignment_5()); }
(rule__Door__FillAssignment_5)
{ after(grammarAccess.getDoorAccess().getFillAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Assembly__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__0__Impl
	rule__Assembly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }

	'assembly' 

{ after(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__1__Impl
	rule__Assembly__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getNameAssignment_1()); }
(rule__Assembly__NameAssignment_1)
{ after(grammarAccess.getAssemblyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__2__Impl
	rule__Assembly__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAssemblyAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__3__Impl
	rule__Assembly__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
(rule__Assembly__ItemsAssignment_3)
{ after(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
)
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
(rule__Assembly__ItemsAssignment_3)*
{ after(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAssemblyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssemblyItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssemblyItem__Group__0__Impl
	rule__AssemblyItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getElementAssignment_0()); }
(rule__AssemblyItem__ElementAssignment_0)
{ after(grammarAccess.getAssemblyItemAccess().getElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssemblyItem__Group__1__Impl
	rule__AssemblyItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getPosKeyword_1()); }

	'pos' 

{ after(grammarAccess.getAssemblyItemAccess().getPosKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssemblyItem__Group__2__Impl
	rule__AssemblyItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getXUnitsAssignment_2()); }
(rule__AssemblyItem__XUnitsAssignment_2)
{ after(grammarAccess.getAssemblyItemAccess().getXUnitsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssemblyItem__Group__3__Impl
	rule__AssemblyItem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getYUnitsAssignment_3()); }
(rule__AssemblyItem__YUnitsAssignment_3)
{ after(grammarAccess.getAssemblyItemAccess().getYUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyItem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssemblyItem__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getZUnitsAssignment_4()); }
(rule__AssemblyItem__ZUnitsAssignment_4)
{ after(grammarAccess.getAssemblyItemAccess().getZUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__RepoAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRepoItemRepositoryParserRuleCall_0_0()); }
	ruleItemRepository{ after(grammarAccess.getModelAccess().getRepoItemRepositoryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AssemblyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAssemblyAssemblyParserRuleCall_1_0()); }
	ruleAssembly{ after(grammarAccess.getModelAccess().getAssemblyAssemblyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getNameValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getItemRepositoryAccess().getNameValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__ElementListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListItemParserRuleCall_2_0()); }
	ruleItem{ after(grammarAccess.getItemRepositoryAccess().getElementListItemParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getXUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getYUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ZUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getZUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getBrickAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__XUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
	ruleXUnit{ after(grammarAccess.getBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__YUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
	ruleYUnit{ after(grammarAccess.getBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__ZUnitsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
	ruleZUnit{ after(grammarAccess.getBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__FillAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getFillColorParserRuleCall_6_0()); }
	ruleColor{ after(grammarAccess.getBrickAccess().getFillColorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__RoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getRoundAlternatives_1_0()); }
(rule__RoundBrick__RoundAlternatives_1_0)
{ after(grammarAccess.getRoundBrickAccess().getRoundAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getRoundBrickAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__XUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getXUnitsXUnitParserRuleCall_4_0()); }
	ruleXUnit{ after(grammarAccess.getRoundBrickAccess().getXUnitsXUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__YUnitsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getYUnitsYUnitParserRuleCall_5_0()); }
	ruleYUnit{ after(grammarAccess.getRoundBrickAccess().getYUnitsYUnitParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__ZUnitsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getZUnitsZUnitParserRuleCall_6_0()); }
	ruleZUnit{ after(grammarAccess.getRoundBrickAccess().getZUnitsZUnitParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoundBrick__FillAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoundBrickAccess().getFillColorParserRuleCall_7_0()); }
	ruleColor{ after(grammarAccess.getRoundBrickAccess().getFillColorParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getDoorBrickAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__XUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
	ruleXUnit{ after(grammarAccess.getDoorBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__YUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
	ruleYUnit{ after(grammarAccess.getDoorBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__ZUnitsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
	ruleZUnit{ after(grammarAccess.getDoorBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoorBrick__FillAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorBrickAccess().getFillColorParserRuleCall_6_0()); }
	ruleColor{ after(grammarAccess.getDoorBrickAccess().getFillColorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Door__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getDoorAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Door__XUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getXUnitsXUnitParserRuleCall_3_0()); }
	ruleXUnit{ after(grammarAccess.getDoorAccess().getXUnitsXUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Door__YUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getYUnitsYUnitParserRuleCall_4_0()); }
	ruleYUnit{ after(grammarAccess.getDoorAccess().getYUnitsYUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Door__FillAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoorAccess().getFillColorParserRuleCall_5_0()); }
	ruleColor{ after(grammarAccess.getDoorAccess().getFillColorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getAssemblyAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__ItemsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssemblyItemParserRuleCall_3_0()); }
	ruleAssemblyItem{ after(grammarAccess.getAssemblyAccess().getItemsAssemblyItemParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getElementLegoElementCrossReference_0_0()); }
(
{ before(grammarAccess.getAssemblyItemAccess().getElementLegoElementQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAssemblyItemAccess().getElementLegoElementQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssemblyItemAccess().getElementLegoElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__XUnitsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getXUnitsXUnitParserRuleCall_2_0()); }
	ruleXUnit{ after(grammarAccess.getAssemblyItemAccess().getXUnitsXUnitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__YUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getYUnitsYUnitParserRuleCall_3_0()); }
	ruleYUnit{ after(grammarAccess.getAssemblyItemAccess().getYUnitsYUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__ZUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getZUnitsZUnitParserRuleCall_4_0()); }
	ruleZUnit{ after(grammarAccess.getAssemblyItemAccess().getZUnitsZUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


