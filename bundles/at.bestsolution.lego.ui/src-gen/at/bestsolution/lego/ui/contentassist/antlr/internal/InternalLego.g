/*
* generated by Xtext
*/
grammar InternalLego;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package at.bestsolution.lego.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.bestsolution.lego.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.bestsolution.lego.services.LegoGrammarAccess;

}

@parser::members {
 
 	private LegoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LegoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItemRepository
entryRuleItemRepository 
:
{ before(grammarAccess.getItemRepositoryRule()); }
	 ruleItemRepository
{ after(grammarAccess.getItemRepositoryRule()); } 
	 EOF 
;

// Rule ItemRepository
ruleItemRepository
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemRepositoryAccess().getGroup()); }
(rule__ItemRepository__Group__0)
{ after(grammarAccess.getItemRepositoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleMountedPart
entryRuleMountedPart 
:
{ before(grammarAccess.getMountedPartRule()); }
	 ruleMountedPart
{ after(grammarAccess.getMountedPartRule()); } 
	 EOF 
;

// Rule MountedPart
ruleMountedPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMountedPartAccess().getGroup()); }
(rule__MountedPart__Group__0)
{ after(grammarAccess.getMountedPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepostoryItem
entryRuleRepostoryItem 
:
{ before(grammarAccess.getRepostoryItemRule()); }
	 ruleRepostoryItem
{ after(grammarAccess.getRepostoryItemRule()); } 
	 EOF 
;

// Rule RepostoryItem
ruleRepostoryItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepostoryItemAccess().getAlternatives()); }
(rule__RepostoryItem__Alternatives)
{ after(grammarAccess.getRepostoryItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColor
entryRuleColor 
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorAccess().getGroup()); }
(rule__Color__Group__0)
{ after(grammarAccess.getColorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnit
entryRuleXUnit 
:
{ before(grammarAccess.getXUnitRule()); }
	 ruleXUnit
{ after(grammarAccess.getXUnitRule()); } 
	 EOF 
;

// Rule XUnit
ruleXUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnitAccess().getUnitsAssignment()); }
(rule__XUnit__UnitsAssignment)
{ after(grammarAccess.getXUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYUnit
entryRuleYUnit 
:
{ before(grammarAccess.getYUnitRule()); }
	 ruleYUnit
{ after(grammarAccess.getYUnitRule()); } 
	 EOF 
;

// Rule YUnit
ruleYUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYUnitAccess().getUnitsAssignment()); }
(rule__YUnit__UnitsAssignment)
{ after(grammarAccess.getYUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleZUnit
entryRuleZUnit 
:
{ before(grammarAccess.getZUnitRule()); }
	 ruleZUnit
{ after(grammarAccess.getZUnitRule()); } 
	 EOF 
;

// Rule ZUnit
ruleZUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getZUnitAccess().getUnitsAssignment()); }
(rule__ZUnit__UnitsAssignment)
{ after(grammarAccess.getZUnitAccess().getUnitsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrick
entryRuleBrick 
:
{ before(grammarAccess.getBrickRule()); }
	 ruleBrick
{ after(grammarAccess.getBrickRule()); } 
	 EOF 
;

// Rule Brick
ruleBrick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBrickAccess().getGroup()); }
(rule__Brick__Group__0)
{ after(grammarAccess.getBrickAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSource
entryRuleSource 
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourceAccess().getAlternatives()); }
(rule__Source__Alternatives)
{ after(grammarAccess.getSourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenerated
entryRuleGenerated 
:
{ before(grammarAccess.getGeneratedRule()); }
	 ruleGenerated
{ after(grammarAccess.getGeneratedRule()); } 
	 EOF 
;

// Rule Generated
ruleGenerated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneratedAccess().getGroup()); }
(rule__Generated__Group__0)
{ after(grammarAccess.getGeneratedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFxmlInclude
entryRuleFxmlInclude 
:
{ before(grammarAccess.getFxmlIncludeRule()); }
	 ruleFxmlInclude
{ after(grammarAccess.getFxmlIncludeRule()); } 
	 EOF 
;

// Rule FxmlInclude
ruleFxmlInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFxmlIncludeAccess().getGroup()); }
(rule__FxmlInclude__Group__0)
{ after(grammarAccess.getFxmlIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssembly
entryRuleAssembly 
:
{ before(grammarAccess.getAssemblyRule()); }
	 ruleAssembly
{ after(grammarAccess.getAssemblyRule()); } 
	 EOF 
;

// Rule Assembly
ruleAssembly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssemblyAccess().getGroup()); }
(rule__Assembly__Group__0)
{ after(grammarAccess.getAssemblyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssemblyItem
entryRuleAssemblyItem 
:
{ before(grammarAccess.getAssemblyItemRule()); }
	 ruleAssemblyItem
{ after(grammarAccess.getAssemblyItemRule()); } 
	 EOF 
;

// Rule AssemblyItem
ruleAssemblyItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssemblyItemAccess().getAlternatives()); }
(rule__AssemblyItem__Alternatives)
{ after(grammarAccess.getAssemblyItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRasterAssemblyItem
entryRuleRasterAssemblyItem 
:
{ before(grammarAccess.getRasterAssemblyItemRule()); }
	 ruleRasterAssemblyItem
{ after(grammarAccess.getRasterAssemblyItemRule()); } 
	 EOF 
;

// Rule RasterAssemblyItem
ruleRasterAssemblyItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getGroup()); }
(rule__RasterAssemblyItem__Group__0)
{ after(grammarAccess.getRasterAssemblyItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMountedAssemblyItem
entryRuleMountedAssemblyItem 
:
{ before(grammarAccess.getMountedAssemblyItemRule()); }
	 ruleMountedAssemblyItem
{ after(grammarAccess.getMountedAssemblyItemRule()); } 
	 EOF 
;

// Rule MountedAssemblyItem
ruleMountedAssemblyItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getGroup()); }
(rule__MountedAssemblyItem__Group__0)
{ after(grammarAccess.getMountedAssemblyItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRepoAssignment_0()); }
(rule__Model__RepoAssignment_0)
{ after(grammarAccess.getModelAccess().getRepoAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAssemblyAssignment_1()); }
(rule__Model__AssemblyAssignment_1)
{ after(grammarAccess.getModelAccess().getAssemblyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RepostoryItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepostoryItemAccess().getBrickParserRuleCall_0()); }
	ruleBrick
{ after(grammarAccess.getRepostoryItemAccess().getBrickParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRepostoryItemAccess().getMountedPartParserRuleCall_1()); }
	ruleMountedPart
{ after(grammarAccess.getRepostoryItemAccess().getMountedPartParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceAccess().getGeneratedParserRuleCall_0()); }
	ruleGenerated
{ after(grammarAccess.getSourceAccess().getGeneratedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSourceAccess().getFxmlIncludeParserRuleCall_1()); }
	ruleFxmlInclude
{ after(grammarAccess.getSourceAccess().getFxmlIncludeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyItemAccess().getRasterAssemblyItemParserRuleCall_0()); }
	ruleRasterAssemblyItem
{ after(grammarAccess.getAssemblyItemAccess().getRasterAssemblyItemParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssemblyItemAccess().getMountedAssemblyItemParserRuleCall_1()); }
	ruleMountedAssemblyItem
{ after(grammarAccess.getAssemblyItemAccess().getMountedAssemblyItemParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__TransformAlternatives_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate180Keyword_5_1_0_0()); }

	'rotate180' 

{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate180Keyword_5_1_0_0()); }
)

    |(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate90Keyword_5_1_0_1()); }

	'rotate90' 

{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate90Keyword_5_1_0_1()); }
)

    |(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate270Keyword_5_1_0_2()); }

	'rotate270' 

{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformRotate270Keyword_5_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ItemRepository__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__0__Impl
	rule__ItemRepository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getNameAssignment_0()); }
(rule__ItemRepository__NameAssignment_0)
{ after(grammarAccess.getItemRepositoryAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__1__Impl
	rule__ItemRepository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getItemRepositoryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__2__Impl
	rule__ItemRepository__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
(rule__ItemRepository__ElementListAssignment_2)
{ after(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
)
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
(rule__ItemRepository__ElementListAssignment_2)*
{ after(grammarAccess.getItemRepositoryAccess().getElementListAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemRepository__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemRepository__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getItemRepositoryAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MountedPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedPart__Group__0__Impl
	rule__MountedPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getMpartKeyword_0()); }

	'mpart' 

{ after(grammarAccess.getMountedPartAccess().getMpartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedPart__Group__1__Impl
	rule__MountedPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getNameAssignment_1()); }
(rule__MountedPart__NameAssignment_1)
{ after(grammarAccess.getMountedPartAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedPart__Group__2__Impl
	rule__MountedPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getFillAssignment_2()); }
(rule__MountedPart__FillAssignment_2)
{ after(grammarAccess.getMountedPartAccess().getFillAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedPart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getSourceAssignment_3()); }
(rule__MountedPart__SourceAssignment_3)
{ after(grammarAccess.getMountedPartAccess().getSourceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Color__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRgbKeyword_0()); }

	'rgb' 

{ after(grammarAccess.getColorAccess().getRgbKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRAssignment_1()); }
(rule__Color__RAssignment_1)
{ after(grammarAccess.getColorAccess().getRAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGAssignment_2()); }
(rule__Color__GAssignment_2)
{ after(grammarAccess.getColorAccess().getGAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBAssignment_3()); }
(rule__Color__BAssignment_3)
{ after(grammarAccess.getColorAccess().getBAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Brick__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__0__Impl
	rule__Brick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getBrickKeyword_0()); }

	'brick' 

{ after(grammarAccess.getBrickAccess().getBrickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__1__Impl
	rule__Brick__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getNameAssignment_1()); }
(rule__Brick__NameAssignment_1)
{ after(grammarAccess.getBrickAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__2__Impl
	rule__Brick__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getUnitsKeyword_2()); }

	'units' 

{ after(grammarAccess.getBrickAccess().getUnitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__3__Impl
	rule__Brick__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getXUnitsAssignment_3()); }
(rule__Brick__XUnitsAssignment_3)
{ after(grammarAccess.getBrickAccess().getXUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__4__Impl
	rule__Brick__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getYUnitsAssignment_4()); }
(rule__Brick__YUnitsAssignment_4)
{ after(grammarAccess.getBrickAccess().getYUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__5__Impl
	rule__Brick__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getZUnitsAssignment_5()); }
(rule__Brick__ZUnitsAssignment_5)
{ after(grammarAccess.getBrickAccess().getZUnitsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__6__Impl
	rule__Brick__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getFillAssignment_6()); }
(rule__Brick__FillAssignment_6)
{ after(grammarAccess.getBrickAccess().getFillAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brick__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brick__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getSourceAssignment_7()); }
(rule__Brick__SourceAssignment_7)
{ after(grammarAccess.getBrickAccess().getSourceAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Generated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group__0__Impl
	rule__Generated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getGeneratedKeyword_0()); }

	'generated' 

{ after(grammarAccess.getGeneratedAccess().getGeneratedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group__1__Impl
	rule__Generated__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getGeneratedAction_1()); }
(

)
{ after(grammarAccess.getGeneratedAccess().getGeneratedAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getGroup_2()); }
(rule__Generated__Group_2__0)?
{ after(grammarAccess.getGeneratedAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Generated__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2__0__Impl
	rule__Generated__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getTypeAssignment_2_0()); }
(rule__Generated__TypeAssignment_2_0)
{ after(grammarAccess.getGeneratedAccess().getTypeAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2__1__Impl
	rule__Generated__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getWidthAssignment_2_1()); }
(rule__Generated__WidthAssignment_2_1)
{ after(grammarAccess.getGeneratedAccess().getWidthAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2__2__Impl
	rule__Generated__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getHeightAssignment_2_2()); }
(rule__Generated__HeightAssignment_2_2)
{ after(grammarAccess.getGeneratedAccess().getHeightAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2__3__Impl
	rule__Generated__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getDepthAssignment_2_3()); }
(rule__Generated__DepthAssignment_2_3)
{ after(grammarAccess.getGeneratedAccess().getDepthAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getGroup_2_4()); }
(rule__Generated__Group_2_4__0)?
{ after(grammarAccess.getGeneratedAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Generated__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2_4__0__Impl
	rule__Generated__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginKeyword_2_4_0()); }

	'origin' 

{ after(grammarAccess.getGeneratedAccess().getOriginKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2_4__1__Impl
	rule__Generated__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginXAssignment_2_4_1()); }
(rule__Generated__OriginXAssignment_2_4_1)
{ after(grammarAccess.getGeneratedAccess().getOriginXAssignment_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2_4__2__Impl
	rule__Generated__Group_2_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginYAssignment_2_4_2()); }
(rule__Generated__OriginYAssignment_2_4_2)
{ after(grammarAccess.getGeneratedAccess().getOriginYAssignment_2_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generated__Group_2_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generated__Group_2_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__Group_2_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginZAssignment_2_4_3()); }
(rule__Generated__OriginZAssignment_2_4_3)
{ after(grammarAccess.getGeneratedAccess().getOriginZAssignment_2_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FxmlInclude__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group__0__Impl
	rule__FxmlInclude__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getFxmlKeyword_0()); }

	'fxml' 

{ after(grammarAccess.getFxmlIncludeAccess().getFxmlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FxmlInclude__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group__1__Impl
	rule__FxmlInclude__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getSource3dAssignment_1()); }
(rule__FxmlInclude__Source3dAssignment_1)
{ after(grammarAccess.getFxmlIncludeAccess().getSource3dAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FxmlInclude__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getGroup_2()); }
(rule__FxmlInclude__Group_2__0)?
{ after(grammarAccess.getFxmlIncludeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FxmlInclude__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group_2__0__Impl
	rule__FxmlInclude__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginKeyword_2_0()); }

	'origin' 

{ after(grammarAccess.getFxmlIncludeAccess().getOriginKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FxmlInclude__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group_2__1__Impl
	rule__FxmlInclude__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginXAssignment_2_1()); }
(rule__FxmlInclude__OriginXAssignment_2_1)
{ after(grammarAccess.getFxmlIncludeAccess().getOriginXAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FxmlInclude__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group_2__2__Impl
	rule__FxmlInclude__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginYAssignment_2_2()); }
(rule__FxmlInclude__OriginYAssignment_2_2)
{ after(grammarAccess.getFxmlIncludeAccess().getOriginYAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FxmlInclude__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FxmlInclude__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginZAssignment_2_3()); }
(rule__FxmlInclude__OriginZAssignment_2_3)
{ after(grammarAccess.getFxmlIncludeAccess().getOriginZAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Assembly__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__0__Impl
	rule__Assembly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }

	'assembly' 

{ after(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__1__Impl
	rule__Assembly__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getNameAssignment_1()); }
(rule__Assembly__NameAssignment_1)
{ after(grammarAccess.getAssemblyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__2__Impl
	rule__Assembly__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAssemblyAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__3__Impl
	rule__Assembly__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
(rule__Assembly__ItemsAssignment_3)
{ after(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
)
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
(rule__Assembly__ItemsAssignment_3)*
{ after(grammarAccess.getAssemblyAccess().getItemsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assembly__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAssemblyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RasterAssemblyItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__0__Impl
	rule__RasterAssemblyItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getElementAssignment_0()); }
(rule__RasterAssemblyItem__ElementAssignment_0)
{ after(grammarAccess.getRasterAssemblyItemAccess().getElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__1__Impl
	rule__RasterAssemblyItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getPosKeyword_1()); }

	'pos' 

{ after(grammarAccess.getRasterAssemblyItemAccess().getPosKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__2__Impl
	rule__RasterAssemblyItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getXUnitsAssignment_2()); }
(rule__RasterAssemblyItem__XUnitsAssignment_2)
{ after(grammarAccess.getRasterAssemblyItemAccess().getXUnitsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__3__Impl
	rule__RasterAssemblyItem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getYUnitsAssignment_3()); }
(rule__RasterAssemblyItem__YUnitsAssignment_3)
{ after(grammarAccess.getRasterAssemblyItemAccess().getYUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__4__Impl
	rule__RasterAssemblyItem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getZUnitsAssignment_4()); }
(rule__RasterAssemblyItem__ZUnitsAssignment_4)
{ after(grammarAccess.getRasterAssemblyItemAccess().getZUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getGroup_5()); }
(rule__RasterAssemblyItem__Group_5__0)?
{ after(grammarAccess.getRasterAssemblyItemAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RasterAssemblyItem__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group_5__0__Impl
	rule__RasterAssemblyItem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformKeyword_5_0()); }

	'transform' 

{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RasterAssemblyItem__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RasterAssemblyItem__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformAssignment_5_1()); }
(rule__RasterAssemblyItem__TransformAssignment_5_1)
{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MountedAssemblyItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__0__Impl
	rule__MountedAssemblyItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getElementAssignment_0()); }
(rule__MountedAssemblyItem__ElementAssignment_0)
{ after(grammarAccess.getMountedAssemblyItemAccess().getElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__1__Impl
	rule__MountedAssemblyItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getPosKeyword_1()); }

	'pos' 

{ after(grammarAccess.getMountedAssemblyItemAccess().getPosKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__2__Impl
	rule__MountedAssemblyItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getXUnitsAssignment_2()); }
(rule__MountedAssemblyItem__XUnitsAssignment_2)
{ after(grammarAccess.getMountedAssemblyItemAccess().getXUnitsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__3__Impl
	rule__MountedAssemblyItem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getYUnitsAssignment_3()); }
(rule__MountedAssemblyItem__YUnitsAssignment_3)
{ after(grammarAccess.getMountedAssemblyItemAccess().getYUnitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__4__Impl
	rule__MountedAssemblyItem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getZUnitsAssignment_4()); }
(rule__MountedAssemblyItem__ZUnitsAssignment_4)
{ after(grammarAccess.getMountedAssemblyItemAccess().getZUnitsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getGroup_5()); }
(rule__MountedAssemblyItem__Group_5__0)?
{ after(grammarAccess.getMountedAssemblyItemAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MountedAssemblyItem__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group_5__0__Impl
	rule__MountedAssemblyItem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getTransformKeyword_5_0()); }

	'transform' 

{ after(grammarAccess.getMountedAssemblyItemAccess().getTransformKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group_5__1__Impl
	rule__MountedAssemblyItem__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateXAssignment_5_1()); }
(rule__MountedAssemblyItem__RotateXAssignment_5_1)
{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateXAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group_5__2__Impl
	rule__MountedAssemblyItem__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateYAssignment_5_2()); }
(rule__MountedAssemblyItem__RotateYAssignment_5_2)
{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateYAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MountedAssemblyItem__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MountedAssemblyItem__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateZAssignment_5_3()); }
(rule__MountedAssemblyItem__RotateZAssignment_5_3)
{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateZAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__RepoAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRepoItemRepositoryParserRuleCall_0_0()); }
	ruleItemRepository{ after(grammarAccess.getModelAccess().getRepoItemRepositoryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AssemblyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAssemblyAssemblyParserRuleCall_1_0()); }
	ruleAssembly{ after(grammarAccess.getModelAccess().getAssemblyAssemblyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getNameValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getItemRepositoryAccess().getNameValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemRepository__ElementListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemRepositoryAccess().getElementListRepostoryItemParserRuleCall_2_0()); }
	ruleRepostoryItem{ after(grammarAccess.getItemRepositoryAccess().getElementListRepostoryItemParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getMountedPartAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__FillAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getFillColorParserRuleCall_2_0()); }
	ruleColor{ after(grammarAccess.getMountedPartAccess().getFillColorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedPart__SourceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedPartAccess().getSourceSourceParserRuleCall_3_0()); }
	ruleSource{ after(grammarAccess.getMountedPartAccess().getSourceSourceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getXUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getYUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ZUnit__UnitsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZUnitAccess().getUnitsINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getZUnitAccess().getUnitsINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getBrickAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__XUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
	ruleXUnit{ after(grammarAccess.getBrickAccess().getXUnitsXUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__YUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
	ruleYUnit{ after(grammarAccess.getBrickAccess().getYUnitsYUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__ZUnitsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
	ruleZUnit{ after(grammarAccess.getBrickAccess().getZUnitsZUnitParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__FillAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getFillColorParserRuleCall_6_0()); }
	ruleColor{ after(grammarAccess.getBrickAccess().getFillColorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brick__SourceAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getSourceSourceParserRuleCall_7_0()); }
	ruleSource{ after(grammarAccess.getBrickAccess().getSourceSourceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getTypeBoxKeyword_2_0_0()); }
(
{ before(grammarAccess.getGeneratedAccess().getTypeBoxKeyword_2_0_0()); }

	'box' 

{ after(grammarAccess.getGeneratedAccess().getTypeBoxKeyword_2_0_0()); }
)

{ after(grammarAccess.getGeneratedAccess().getTypeBoxKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__WidthAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getWidthFLOATTerminalRuleCall_2_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getWidthFLOATTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__HeightAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getHeightFLOATTerminalRuleCall_2_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getHeightFLOATTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__DepthAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getDepthFLOATTerminalRuleCall_2_3_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getDepthFLOATTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__OriginXAssignment_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginXFLOATTerminalRuleCall_2_4_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getOriginXFLOATTerminalRuleCall_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__OriginYAssignment_2_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginYFLOATTerminalRuleCall_2_4_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getOriginYFLOATTerminalRuleCall_2_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generated__OriginZAssignment_2_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratedAccess().getOriginZFLOATTerminalRuleCall_2_4_3_0()); }
	RULE_FLOAT{ after(grammarAccess.getGeneratedAccess().getOriginZFLOATTerminalRuleCall_2_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__Source3dAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getSource3dSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFxmlIncludeAccess().getSource3dSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__OriginXAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginXFLOATTerminalRuleCall_2_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getFxmlIncludeAccess().getOriginXFLOATTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__OriginYAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginYFLOATTerminalRuleCall_2_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getFxmlIncludeAccess().getOriginYFLOATTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FxmlInclude__OriginZAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFxmlIncludeAccess().getOriginZFLOATTerminalRuleCall_2_3_0()); }
	RULE_FLOAT{ after(grammarAccess.getFxmlIncludeAccess().getOriginZFLOATTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getAssemblyAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__ItemsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssemblyAccess().getItemsAssemblyItemParserRuleCall_3_0()); }
	ruleAssemblyItem{ after(grammarAccess.getAssemblyAccess().getItemsAssemblyItemParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getElementRasterItemCrossReference_0_0()); }
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getElementRasterItemQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRasterAssemblyItemAccess().getElementRasterItemQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRasterAssemblyItemAccess().getElementRasterItemCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__XUnitsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getXUnitsXUnitParserRuleCall_2_0()); }
	ruleXUnit{ after(grammarAccess.getRasterAssemblyItemAccess().getXUnitsXUnitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__YUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getYUnitsYUnitParserRuleCall_3_0()); }
	ruleYUnit{ after(grammarAccess.getRasterAssemblyItemAccess().getYUnitsYUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__ZUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getZUnitsZUnitParserRuleCall_4_0()); }
	ruleZUnit{ after(grammarAccess.getRasterAssemblyItemAccess().getZUnitsZUnitParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RasterAssemblyItem__TransformAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasterAssemblyItemAccess().getTransformAlternatives_5_1_0()); }
(rule__RasterAssemblyItem__TransformAlternatives_5_1_0)
{ after(grammarAccess.getRasterAssemblyItemAccess().getTransformAlternatives_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getElementMountedPartCrossReference_0_0()); }
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getElementMountedPartQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMountedAssemblyItemAccess().getElementMountedPartQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMountedAssemblyItemAccess().getElementMountedPartCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__XUnitsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getXUnitsFLOATTerminalRuleCall_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getXUnitsFLOATTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__YUnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getYUnitsFLOATTerminalRuleCall_3_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getYUnitsFLOATTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__ZUnitsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getZUnitsFLOATTerminalRuleCall_4_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getZUnitsFLOATTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__RotateXAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateXFLOATTerminalRuleCall_5_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateXFLOATTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__RotateYAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateYFLOATTerminalRuleCall_5_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateYFLOATTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MountedAssemblyItem__RotateZAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMountedAssemblyItemAccess().getRotateZFLOATTerminalRuleCall_5_3_0()); }
	RULE_FLOAT{ after(grammarAccess.getMountedAssemblyItemAccess().getRotateZFLOATTerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : '-'? ('0'..'9')+;

RULE_FLOAT : '-'? ('0'..'9')+ '.' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


